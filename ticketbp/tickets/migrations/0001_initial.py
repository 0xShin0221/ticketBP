# Generated by Django 2.1.3 on 2019-02-09 07:58

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import tickets.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='タイトル')),
                ('content', models.TextField(max_length=5000, null=True, verbose_name='内容')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日')),
            ],
            options={
                'db_table': 'answer',
                'verbose_name_plural': 'お悩みチケットへの返信',
                'verbose_name': 'お悩みチケットへの返信',
            },
        ),
        migrations.CreateModel(
            name='AnswerReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.IntegerField(blank=True, choices=[(1, '★1'), (2, '★2'), (3, '★3'), (4, '★4'), (5, '★5')], null=True, verbose_name='評価点')),
                ('from_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='review_user')),
            ],
            options={
                'db_table': 'answerreview',
                'verbose_name_plural': 'お悩みチケットへの返信の評価',
                'verbose_name': 'お悩みチケットへの返信の評価',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='カテゴリー名')),
                ('extra_fee_rate', models.FloatField(default=0, help_text='カテゴリーごとに持つ追加の販売手数料。0から1の小数で設定します。', verbose_name='カテゴリーごとの追加手数料')),
                ('display_priority', models.IntegerField(help_text='数字が大きいカテゴリーほど一覧表示で上位に表示されます。', verbose_name='表示優先度')),
            ],
            options={
                'db_table': 'category',
                'verbose_name_plural': 'カテゴリー',
                'ordering': ('-display_priority', 'name'),
                'verbose_name': 'カテゴリー',
            },
        ),
        migrations.CreateModel(
            name='OnayamiTicket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='お悩みタイトル')),
                ('content', models.TextField(max_length=5000, null=True, verbose_name='内容')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('solved_status', models.PositiveIntegerField(choices=[(0, '解決済み'), (1, '未解決'), (2, '急募')], default=1, verbose_name='解決ステータス')),
                ('display_priority', models.IntegerField(blank=True, help_text='数字が大きいカテゴリーほど一覧表示で上位に表示されます。', null=True, verbose_name='課金での表示優先度_')),
                ('bookmark_people', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='onayami_people', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='onayamiticket', to='tickets.Category', verbose_name='お悩みカテゴリ')),
                ('offer_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offering_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'onayami_ticket',
                'verbose_name_plural': 'お悩みチケット',
                'verbose_name': 'お悩みチケット',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='チケット名')),
                ('content', models.TextField(max_length=5000, null=True, verbose_name='内容')),
                ('start_date', models.DateField(verbose_name='開催日')),
                ('price', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(100), tickets.validators.StepValueValidator(100)], verbose_name='金額(円)')),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='販売枚数(枚)')),
                ('status', models.PositiveIntegerField(choices=[(0, '出品中'), (1, '出品停止'), (2, '完売')], default=0, verbose_name='販売ステータス')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bookmark_people', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bookmark_people', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets', to='tickets.Category', verbose_name='カテゴリー')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selling_tickets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ticket',
                'verbose_name_plural': 'チケット',
                'verbose_name': 'チケット',
            },
        ),
        migrations.AddField(
            model_name='answer',
            name='answer_review',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='target_answer', to='tickets.AnswerReview'),
        ),
        migrations.AddField(
            model_name='answer',
            name='onayami_ticket',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='to_answer', to='tickets.OnayamiTicket'),
        ),
        migrations.AddField(
            model_name='answer',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL),
        ),
    ]
